{"version":3,"sources":["components/appBar2.js","components/textField.js","components/secondAppBar.js","components/groups.js","App.js","serviceWorker.js","index.js"],"names":["PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","theme","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","grow","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","map","text","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","content","contentShift","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","OutlinedTextFields","name","test","handleChange","event","target","value","handleClickAddItem","TextField_default","id","label","fullWidth","TextField","margin","onChange","InputProps","endAdornment","InputAdornment_default","Send_default","container","flexWrap","textField","dense","marginTop","menu","FolderList","selectedIndex","handleListItemClick","console","log","_this2","Image_default","secondary","ListItemSecondaryAction_default","Edit_default","backgroundColor","palette","background","App","appBar2","secondAppBar","groups","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0db0a888.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n        const { open } = this.state;\n\n        return (\n            <div className={classes.root}>\n               <CssBaseline />\n               <AppBar\n                    position=\"static\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            My TO-DO list\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n\n                </main>\n            </div>\n        );\n    }\n}\n\nPersistentDrawerLeft.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 500,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n    state = {\r\n        name: 'Cat in the Hat',\r\n        test: '',\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleClickAddItem= () =>{\r\n    let text = this.state.name;\r\n    this.setState({test:text});\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n\r\n            <TextField\r\n                id=\"outlined-with-placeholder\"\r\n                label=\"Input\"\r\n                fullWidth\r\n                className={classes.TextField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={this.handleChange('name')}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                color=\"primary\"\r\n                                aria-label=\"Add Item\"\r\n                                onClick={this.handleClickAddItem}\r\n                            > <SendIcon/>\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedTextFields);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport OutlinedTextFields from './textField'\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nfunction SimpleAppBar(props) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"inherit\"\r\n            >\r\n                <Toolbar>\r\n                    <OutlinedTextFields/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 10,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass FolderList extends React.Component {\r\n    state = {\r\n        selectedIndex: 1,\r\n    };\r\n\r\n    handleListItemClick = (index) => {\r\n        console.log(index);\r\n        this.setState({selectedIndex: index});\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListItem\r\n                    button\r\n                    onClick={() => this.handleListItemClick(0)}\r\n                >\r\n                    <ImageIcon/>\r\n                    <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\"/>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label=\"Edit\">\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nFolderList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FolderList);\r\n","import React, {Component} from 'react';\nimport PersistentDrawerLeft from './components/appBar2'\nimport SimpleAppBar from './components/secondAppBar'\nimport FolderList from './components/groups'\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <PersistentDrawerLeft/>\n                <SimpleAppBar/>\n                <FolderList/>\n            </div>\n        );\n    }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}